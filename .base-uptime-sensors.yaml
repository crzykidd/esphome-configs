sensor:
    
  - platform: uptime
    id: uptime_sensor     #gets uptime in human readable format
    name: uptime in seconds
    update_interval: $uptime_refresh
    on_raw_value:  # lambda code converts seconds to friendly format
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();
text_sensor:
  - platform: template
    name: Friendly Uptime  #Human Readable format
    id: uptime_human
    entity_category: diagnostic
    icon: mdi:clock-start
  - platform: template
    name: "Current Time"   #show current time of device
    lambda: |-
      char str[18];
      time_t currTime = id(homeassistant_time).now().timestamp;
      strftime(str, sizeof(str), "%y-%m-%d %H:%M:%S", localtime(&currTime));
      return  { str };
    update_interval: $uptime_refresh    
    entity_category: diagnostic
    icon: mdi:clock-outline
time:
  - platform: homeassistant   #uses Home Assistant as time source
    id: homeassistant_time
    timezone: $timezone
